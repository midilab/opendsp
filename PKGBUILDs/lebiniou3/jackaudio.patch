--- jackaudio.c	2019-04-05 20:39:14.000000000 +0000
+++ jackaudio.c.new	2019-06-25 16:34:51.000000000 +0000
@@ -26,7 +26,6 @@
 /* JACK data */
 static jack_port_t **input_ports;
 static jack_client_t *client;
-static char *source_names[2] = { NULL, NULL };
 static const char **ports;
 
 // default input size if not defined in the configuration file
@@ -127,8 +126,6 @@
 void
 create(Context_t *ctx)
 {
-  int i;
-
   if ((client = jack_client_open(PACKAGE, JackNullOption, NULL)) == 0) {
     xerror("JACK server not running ?\n");
   }
@@ -136,16 +133,6 @@
   jack_set_process_callback(client, process, ctx);
   jack_on_shutdown(client, jack_shutdown, ctx);
 
-  if (NULL == (source_names[0] = getenv("LEBINIOU_JACK_LEFT"))) {
-    source_names[0] = "system:capture_1";
-  }
-  if (NULL == (source_names[1] = getenv("LEBINIOU_JACK_RIGHT"))) {
-    source_names[1] = "system:capture_2";
-  }
-
-  printf("[i] JACK: left  capture from %s\n", source_names[0]);
-  printf("[i] JACK: right capture from %s\n", source_names[1]);
-
   setup_ports();
 
   jack_nframes_t jack_size = jack_get_buffer_size(client);
@@ -166,15 +153,6 @@
     xerror("JACK: cannot activate client\n");
   }
 
-  for (i = 0; i < 2; i++) {
-    if (jack_connect(client, ports[i], jack_port_name(input_ports[i]))) {
-      fprintf(stderr, "[!] JACK: can not connect input port %s to %s\n", jack_port_name(input_ports[i]), source_names[i]);
-      jack_client_close(client);
-      exit(1);
-    } else {
-      printf("[i] JACK: connected %s to %s\n", source_names[i], jack_port_name(input_ports[i]));
-    }
-  }
   jack_free(ports);
 }
 
