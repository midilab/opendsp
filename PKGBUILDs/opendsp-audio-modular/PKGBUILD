# Maintainer: Midilab <contact@midilab.co>

pkgname=opendsp-audio-modular
pkgver=0.1
pkgrel=1
pkgdesc='OpenDSP Audio Modular meta package'
arch=(any)
url='http://midilab.co/opendsp'
license=('GPL')
depends=(carla cadence bchoppr beatslash-lv2 ecasound pd pd-lua \
        qtractor milkytracker giada luppp mixxx xwax lmms hydrogen \
        blop.lv2 bsequencer bshapr bslizr calf deteriorate-lv2 drumgizmo \
        drumkv1 element eteroj.lv2 fomp.lv2 guitarix gxplugins.lv2 \
        helm-synth infamousplugins ir.lv2 jalv lilv vlc \
        liquidsfz lsp-plugins lv2 lv2file lv2lint lvtk mda.lv2\
        mephisto.lv2 midi_matrix.lv2 midimsg-lv2 moony.lv2 \
        padthv1 qmidiarp samplv1 setbfree sfizz sratom \
        suil synthv1 vm.lv2 x42-plugins xmonk.lv2 zynaddsubfx \
        raul ingen distrho-lv2 \
        non-timeline non-mixer non-session-manager non-sequencer klystrack \
        dpf-plugins-lv2-git swh-lv2 zamplugins \
        drmr-falktx-git sooperlooper-lv2-plugin opendsp-mods-factory-audio)

# processing
# "/home/opendsp/.processing:/home/opendsp/data/app/processing/"
# lebiniou 
# "/home/opendsp/.java:/home/opendsp/data/app/java/"
# "/home/opendsp/.lebiniou:/home/opendsp/data/app/lebiniou/"
# projectm
# "/home/opendsp/.projectM:/home/opendsp/data/app/projectm/"

package()
{
  cd "${srcdir}"
  # symlink our apps that need realtime rw access
  paths=(
         # Puredata setup
         "/home/opendsp/.pdsettings:/home/opendsp/data/app/puredata/pdsettings"
         "/home/opendsp/.config/Pd/org.puredata.pd.pd-gui:/home/opendsp/data/app/puredata/org.puredata.pd.pd-gui/"
         # falktx stuffs (carla, cadence...)
         "/home/opendsp/.config/falkTX:/home/opendsp/data/app/falktx/" 
         # ingen modular audio
         "/home/opendsp/.config/ingen:/home/opendsp/data/app/ingen/"
         # patchage
         "/home/opendsp/.config/patchagerc:/home/opendsp/data/app/patchage/patchagerc"
         # rncbc stuffs
         "/home/opendsp/.config/rncbc.org:/home/opendsp/data/app/rncbc.org/"
         # audio player
         "/home/opendsp/.local/share/vlc:/home/opendsp/data/app/vlc-local/"
         "/home/opendsp/.config/vlc:/home/opendsp/data/app/vlc/"
         # loopers 
         "/home/opendsp/.config/openAV/luppp:/home/opendsp/data/app/luppp/"
         "/home/opendsp/.giada:/home/opendsp/data/app/giada/"
         # gui
         "/home/opendsp/.fltk:/home/opendsp/data/app/fltk/"
         # daws/sequencers/trackers
         "/home/opendsp/.hydrogen:/home/opendsp/data/app/hydrogen/"
         "/home/opendsp/.lmmsrc.xml:/home/opendsp/data/app/lmms/lmmsrc.xml"
         "/home/opendsp/.non:/home/opendsp/data/app/non/"
         "/home/opendsp/.non-daw:/home/opendsp/data/app/non-daw/"
         "/home/opendsp/.non-mixer:/home/opendsp/data/app/non-mixer/"
         "/home/opendsp/.config/milkytracker:/home/opendsp/data/app/milkytracker/"
         "/home/opendsp/.config/SunVox:/home/opendsp/data/app/sunvox/"
         # djing
         "/home/opendsp/.mixxx:/home/opendsp/data/app/mixxx/"
         # synths
         "/home/opendsp/.helm:/home/opendsp/data/app/helm/"
         "/home/opendsp/.local/share/DigitalSuburban/Dexed:/home/opendsp/data/app/dexed/")

  for path in "${paths[@]}"; do
      # split by `:`
      data=($(echo $path | tr ":" "\n"))
      src=${data[0]}
      dst=${data[1]}
      
      # the destination is a file or a dir?
      if ! [ -z ${dst##*/} ]
      then
        # the destinatoin is a file
        mkdir -p $pkgdir/${dst%/*}
      else
        # the destination is a dir
        mkdir -p $pkgdir/$dst
      fi

      mkdir -p $pkgdir/${src%/*}

      ln -sr $pkgdir/$dst $pkgdir/$src
  done

  # copy apps skel configs for opendsp
  cp -Rf ../skel/* $pkgdir/home/opendsp/data/app/

  # fix permitions
  chown -R opendsp:opendsp $pkgdir/home/opendsp/
}

